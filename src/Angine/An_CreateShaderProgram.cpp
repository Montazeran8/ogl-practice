#include "../../include/Angine/An_Render.hpp"
#include "../../include/Angine/An_Globals.hpp"

#include <iostream>

namespace An
{
  void CreateShaderProgram(const GLchar* vs_src, const GLchar* fs_src)
  {
    GLuint vshader = CompileShader(GL_VERTEX_SHADER, vs_src);
    GLuint fshader = CompileShader(GL_FRAGMENT_SHADER, fs_src);

    ShaderProgram = glCreateProgram();
    glAttachShader(ShaderProgram, vshader);
    glAttachShader(ShaderProgram, fshader);

    glLinkProgram(ShaderProgram);

    int n=8192;
    // getting n by glGetProgramiv()
    glGetProgramiv(ShaderProgram,GL_INFO_LOG_LENGTH,&n);

    // printing log generated by glLinkProgram()
    GLchar* infoLog=new GLchar[n];
    glGetProgramInfoLog(ShaderProgram,n+1,nullptr,infoLog);
    std::cout << "\nshader link log(" << n << "): "
      << infoLog << std::endl;
    delete[] infoLog;

    glValidateProgram(ShaderProgram);

    // getting n by glGetProgramiv()
    glGetProgramiv(ShaderProgram,GL_INFO_LOG_LENGTH,&n);

    //printing log generated by glValidateProgram()
    infoLog=new GLchar[n];
    glGetProgramInfoLog(ShaderProgram,n+1,nullptr,infoLog);
    std::cout << "\nshader validation log(" << n << "): "
      << infoLog << std::endl;
    delete[] infoLog;

  }
}
